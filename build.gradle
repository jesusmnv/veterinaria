plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.4.1.3373"
	id "jacoco"
}

group = 'org.bedu.java.backend'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// runtimeOnly 'com.h2database:h2'
	// implementation 'org.xerial:sqlite-jdbc:3.45.0.0'
	// runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'com.mysql:mysql-connector-j:8.3.0'
	implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.2.Final'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2:2.2.224'

}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}

jacocoTestReport {
    reports {
        xml.required = true
    }

		afterEvaluate {
			classDirectories.setFrom(files(classDirectories.files.collect {
						fileTree(dir: it,
								exclude: [
									'org/bedu/java/backend/veterinaria/dto/**/**',
									'org/bedu/java/backend/veterinaria/model/**',
									'org/bedu/java/backend/veterinaria/mapper/**',
									'org/bedu/java/backend/veterinaria/VeterinariaApplication.class'
								]
						)
			}))
		}
}


test {
	jacoco {
		excludes = [
			'org.bedu.java.backend.veterinaria.dto.*.*',
			'org.bedu.java.backend.veterinaria.model.*',
			'org.bedu.java.backend.veterinaria.mapper.*',
			'org.bedu.java.backend.veterinaria.VeterinariaApplication.class'
		]
	
	}
}

tasks.named('sonar') {
	dependsOn test
}